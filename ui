-- ModernUI Library
local ModernUI = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Constants
local TWEEN_SPEED = 0.15
local CORNER_RADIUS = UDim.new(0, 6)
local DEFAULT_FONT = Enum.Font.GothamMedium
local COLORS = {
    Background = Color3.fromRGB(30, 30, 35),
    Accent = Color3.fromRGB(66, 134, 245),
    Text = Color3.fromRGB(255, 255, 255),
    Secondary = Color3.fromRGB(45, 45, 50),
    Disabled = Color3.fromRGB(60, 60, 65)
}

-- Create the main window
function ModernUI:CreateWindow(title)
    local Window = {}
    
    -- Create ScreenGui
    local gui = Instance.new("ScreenGui")
    gui.Name = "ModernUI"
    gui.ResetOnSpawn = false
    gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 300, 0, 350)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -175)
    mainFrame.BackgroundColor3 = COLORS.Background
    mainFrame.Parent = gui
    
    -- Add corner radius
    local corner = Instance.new("UICorner")
    corner.CornerRadius = CORNER_RADIUS
    corner.Parent = mainFrame
    
    -- Title
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -20, 0, 30)
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = DEFAULT_FONT
    titleLabel.Text = title
    titleLabel.TextColor3 = COLORS.Text
    titleLabel.TextSize = 18
    titleLabel.Parent = mainFrame
    
    -- Container for elements
    local container = Instance.new("ScrollingFrame")
    container.Name = "Container"
    container.Size = UDim2.new(1, -20, 1, -45)
    container.Position = UDim2.new(0, 10, 0, 35)
    container.BackgroundTransparency = 1
    container.ScrollBarThickness = 4
    container.ScrollBarImageColor3 = COLORS.Accent
    container.Parent = mainFrame
    
    -- Auto-size list layout
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = container
    
    -- Make window draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleLabel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Button creation function
    function Window:CreateButton(text, callback)
        local button = Instance.new("TextButton")
        button.Name = "Button"
        button.Size = UDim2.new(1, 0, 0, 35)
        button.BackgroundColor3 = COLORS.Secondary
        button.Text = text
        button.TextColor3 = COLORS.Text
        button.Font = DEFAULT_FONT
        button.TextSize = 14
        button.Parent = container
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = CORNER_RADIUS
        corner.Parent = button
        
        -- Button animations
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(TWEEN_SPEED), {
                BackgroundColor3 = COLORS.Accent
            }):Play()
        end)
        
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(TWEEN_SPEED), {
                BackgroundColor3 = COLORS.Secondary
            }):Play()
        end)
        
        button.MouseButton1Click:Connect(function()
            callback()
        end)
        
        return button
    end
    
    -- Toggle creation function
    function Window:CreateToggle(text, default, callback)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = "Toggle"
        toggleFrame.Size = UDim2.new(1, 0, 0, 35)
        toggleFrame.BackgroundColor3 = COLORS.Secondary
        toggleFrame.Parent = container
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = CORNER_RADIUS
        corner.Parent = toggleFrame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -60, 1, 0)
        label.Position = UDim2.new(0, 10, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = COLORS.Text
        label.Font = DEFAULT_FONT
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = toggleFrame
        
        local toggle = Instance.new("Frame")
        toggle.Size = UDim2.new(0, 40, 0, 20)
        toggle.Position = UDim2.new(1, -50, 0.5, -10)
        toggle.BackgroundColor3 = default and COLORS.Accent or COLORS.Disabled
        toggle.Parent = toggleFrame
        
        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(1, 0)
        toggleCorner.Parent = toggle
        
        local indicator = Instance.new("Frame")
        indicator.Size = UDim2.new(0, 16, 0, 16)
        indicator.Position = UDim2.new(default and 1 or 0, default and -18 or 2, 0.5, -8)
        indicator.BackgroundColor3 = COLORS.Text
        indicator.Parent = toggle
        
        local indicatorCorner = Instance.new("UICorner")
        indicatorCorner.CornerRadius = UDim.new(1, 0)
        indicatorCorner.Parent = indicator
        
        local enabled = default
        local function updateToggle()
            enabled = not enabled
            TweenService:Create(toggle, TweenInfo.new(TWEEN_SPEED), {
                BackgroundColor3 = enabled and COLORS.Accent or COLORS.Disabled
            }):Play()
            TweenService:Create(indicator, TweenInfo.new(TWEEN_SPEED), {
                Position = enabled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            }):Play()
            callback(enabled)
        end
        
        toggleFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                updateToggle()
            end
        end)
        
        return toggleFrame
    end
    
    -- Text input creation function
    function Window:CreateTextBox(placeholder, callback)
        local textBox = Instance.new("TextBox")
        textBox.Name = "TextBox"
        textBox.Size = UDim2.new(1, 0, 0, 35)
        textBox.BackgroundColor3 = COLORS.Secondary
        textBox.PlaceholderText = placeholder
        textBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
        textBox.Text = ""
        textBox.TextColor3 = COLORS.Text
        textBox.Font = DEFAULT_FONT
        textBox.TextSize = 14
        textBox.Parent = container
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = CORNER_RADIUS
        corner.Parent = textBox
        
        local padding = Instance.new("UIPadding")
        padding.PaddingLeft = UDim.new(0, 10)
        padding.Parent = textBox
        
        textBox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                callback(textBox.Text)
            end
        end)
        
        return textBox
    end
    
    -- Slider creation function
    function Window:CreateSlider(text, min, max, default, callback)
        local sliderFrame = Instance.new("Frame")
        sliderFrame.Name = "Slider"
        sliderFrame.Size = UDim2.new(1, 0, 0, 50)
        sliderFrame.BackgroundColor3 = COLORS.Secondary
        sliderFrame.Parent = container
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = CORNER_RADIUS
        corner.Parent = sliderFrame
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -20, 0, 20)
        label.Position = UDim2.new(0, 10, 0, 5)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = COLORS.Text
        label.Font = DEFAULT_FONT
        label.TextSize = 14
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = sliderFrame
        
        local valueLabel = Instance.new("TextLabel")
        valueLabel.Size = UDim2.new(0, 50, 0, 20)
        valueLabel.Position = UDim2.new(1, -60, 0, 5)
        valueLabel.BackgroundTransparency = 1
        valueLabel.Text = tostring(default)
        valueLabel.TextColor3 = COLORS.Text
        valueLabel.Font = DEFAULT_FONT
        valueLabel.TextSize = 14
        valueLabel.Parent = sliderFrame
        
        local sliderBG = Instance.new("Frame")
        sliderBG.Name = "SliderBG"
        sliderBG.Size = UDim2.new(1, -20, 0, 4)
        sliderBG.Position = UDim2.new(0, 10, 0, 35)
        sliderBG.BackgroundColor3 = COLORS.Disabled
        sliderBG.Parent = sliderFrame
        
        local sliderBGCorner = Instance.new("UICorner")
        sliderBGCorner.CornerRadius = UDim.new(1, 0)
        sliderBGCorner.Parent = sliderBG
        
        local sliderFill = Instance.new("Frame")
        sliderFill.Name = "SliderFill"
        sliderFill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
        sliderFill.BackgroundColor3 = COLORS.Accent
        sliderFill.Parent = sliderBG
        
        local sliderFillCorner = Instance.new("UICorner")
        sliderFillCorner.CornerRadius = UDim.new(1, 0)
        sliderFillCorner.Parent = sliderFill
        
        local function updateSlider(input)
            local pos = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
            local value = math.floor(min + (max - min) * pos)
            TweenService:Create(sliderFill, TweenInfo.new(TWEEN_SPEED), {
                Size = UDim2.new(pos, 0, 1, 0)
            }):Play()
            valueLabel.Text = tostring(value)
            callback(value)
        end
        
        sliderBG.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                updateSlider(input)
                local connection
                connection = UserInputService.InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        updateSlider(input)
                    end
                end)
                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if connection then
                            connection:Disconnect()
                        end
                    end
                end)
            end
        end)
        
        return sliderFrame
    end
    
    return Window
end

return ModernUI
